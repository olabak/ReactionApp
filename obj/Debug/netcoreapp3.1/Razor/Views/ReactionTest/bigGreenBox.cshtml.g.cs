#pragma checksum "C:\Users\Ola\Documents\dokumenty studia\magisterka\Biometria\Biometria projekt\ReactionTestApp-main\Views\ReactionTest\bigGreenBox.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1d79e8be4c7cc029597b5e6cd8cedd8c09fa68a7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ReactionTest_bigGreenBox), @"mvc.1.0.view", @"/Views/ReactionTest/bigGreenBox.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Ola\Documents\dokumenty studia\magisterka\Biometria\Biometria projekt\ReactionTestApp-main\Views\_ViewImports.cshtml"
using ReactionTimeApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Ola\Documents\dokumenty studia\magisterka\Biometria\Biometria projekt\ReactionTestApp-main\Views\_ViewImports.cshtml"
using ReactionTimeApp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1d79e8be4c7cc029597b5e6cd8cedd8c09fa68a7", @"/Views/ReactionTest/bigGreenBox.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2b6d516f41215a621a28bd2ba0da767fa5ba0ff8", @"/Views/_ViewImports.cshtml")]
    public class Views_ReactionTest_bigGreenBox : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Ola\Documents\dokumenty studia\magisterka\Biometria\Biometria projekt\ReactionTestApp-main\Views\ReactionTest\bigGreenBox.cshtml"
  
    ViewData["Title"] = "bigGreenBox";


#line default
#line hidden
#nullable disable
            WriteLiteral("<h1>Big Green Box</h1>\r\n\r\n<html lang=\"en\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1d79e8be4c7cc029597b5e6cd8cedd8c09fa68a73739", async() => {
                WriteLiteral(@"
    <meta charset=""utf-8"">
    <title>Reaction time test 6</title>

    <style>

        :root {
            --bound: 100px;
        }

        body {
            background-color: rgba(11, 19, 17, 0.5);
            text-align: center;
            color: #000000;
            opacity: 1;
            font-family: Arial;
        }

        .p {
            text-align: center;
            color: #000000;
            opacity: 1;
            font-family: Arial;
            font-weight: bold;
        }

        .gr {
            color: rgb(0, 255, 13);
        }

        .s {
            background-color: rgb(0, 255, 13);
            font-family: Arial;
            font-weight: bold;
            width: 150px;
            height: 70px;
        }

        #box {
            width: var(--bound*10);
            height: var(--bound);
            background-color: red;
            opacity: 1;
            display: none;
            position: relative;
        }
    </style>
");
                WriteLiteral("\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1d79e8be4c7cc029597b5e6cd8cedd8c09fa68a75765", async() => {
                WriteLiteral(@"
    
    <div id=""text"">
        <h1>Click on the <span class=""gr"">GREEN</span> box as fast as u can :)</h1>
        <h4>Before you start, please enter your age and the device you are using. </h4>
        <h5> Click ""Save Game"" to save your best result.</h5>
    </div>
    <div>
        <input id=""userAge"" type=""number"" placeholder=""Type your age"">
        <input id=""userDevice"" type=""text"" placeholder=""What is your device?"">
    </div>
    <div>
        <button class=""s"" onclick=""gameStart()"" type=""button"">Start Game</button>
        <button class=""s"" id=""SaveGame"" type=""button"">Save Game</button>
    </div>
    <p class=""p"">Reaction time: <span id=""time"">0</span>s</p>
    <h1> </h1>
    <div id=""box""></div>

    <script type=""text/javascript"">
        var createdTime;
        var clickedTime;
        var reactionTime;
        var testName = ""Big green box"";
        var list = [];

        function makebox() {

            var time = Math.random();
            time = time * 1000");
                WriteLiteral(@"0; //speed nowy folder

            setTimeout(function () {
                document.getElementById('box').style.borderRadius = ""0x"";
                document.getElementById('box').style.border = ""5px solid black"";



                if (document.documentElement.clientWidth > document.documentElement.clientHeight) {
                    var dynamicBound = document.documentElement.clientWidth / 4;

                } else {
                    var dynamicBound = document.documentElement.clientHeight / 10;
                }

                dynamicBound = dynamicBound + ""px"";
                document.documentElement.style.setProperty(""--bound"", dynamicBound);



                document.getElementById('box').style.backgroundColor = 'rgb(0, 255, 13)';
                document.getElementById('box').style.display = ""block"";


                createdTime = Date.now();
            }, time);


        }

        function gameStart() {
             var a = 0;
             document.getEle");
                WriteLiteral(@"mentById(""userAge"").style.display = 'none';
             document.getElementById(""userDevice"").style.display = 'none';
             document.getElementById(""text"").style.display = 'none';
            document.getElementById('box').onclick = function(){
                this.style.display=""none"";
                clickedTime = Date.now();
                reactionTime = (clickedTime - createdTime) / 1000;
                document.getElementById('time').innerHTML = reactionTime;
                list[a] = reactionTime;
                a++;
                makebox();
            }
            makebox();
        }

        document.getElementById(""SaveGame"").onclick = function () {

            var min = 10000;
            for (var i = 0; i < list.length; i++) {

                if (min >= list[i]) {
                    min = list[i];
                }
            }
            var userAge = document.getElementById(""userAge"").value;
            var userDevice = document.getElementById(""userDe");
                WriteLiteral("vice\").value;\r\n            console.log(userAge);\r\n            reactionSpan = min * 1000;\r\n             $.ajax({\r\n                url: \'");
#nullable restore
#line 147 "C:\Users\Ola\Documents\dokumenty studia\magisterka\Biometria\Biometria projekt\ReactionTestApp-main\Views\ReactionTest\bigGreenBox.cshtml"
                 Write(Url.Action("AddRecordToReactionTest", "ReactionTest"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                type: 'POST',
                data: {
                    ""span"": reactionSpan,
                    ""testName"": testName,
                    ""userAge"": userAge,
                    ""userDevice"": userDevice
                },
                success: function (response) {
                    var Data = JSON.parse(response);
                    alert(""Your best reaction time has been saved!"");
                },
                failure: function () {
                    var Data = JSON.parse(response);
                    alert(response);
                },
                error: function () {
                    var Data = JSON.parse(response);
                    alert(response);
                }

            });
        };
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
